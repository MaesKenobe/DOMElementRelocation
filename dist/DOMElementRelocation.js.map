{"version":3,"sources":["DOMElementRelocation.js"],"names":["DOMElementRelocation","conf","self","$win","$","window","opts","breakpoints","desk","tab","mob","elements","_registerElements","_registerBreakpoints","Object","entries","map","k","v","on","e","_bulkRelocate","mediaQueryEvents","breakpoint","pos","forEach","_relocate","el","element","$target","position","$el","data","undefined","$originalPosHolder","insertAfter","$orig","prependTo","appendTo"],"mappings":";;;;;;;;IAAMA,oB;AAEJ,gCAAYC,IAAZ,EAAkB;AAAA;;AAChB,QAAMC,OAAO,IAAb;;AAEAA,SAAKC,IAAL,GAAYC,EAAEC,MAAF,CAAZ;;AAEA;AACAH,SAAKI,IAAL;AACEC,mBAAa;AACXC,cAAM,qBADK;AAEXC,aAAK,4CAFM;AAGXC,aAAK;AAHM,OADf;AAMEC,gBAAU;AANZ,OAOKV,IAPL;;AAUAC,SAAKU,iBAAL;AACAV,SAAKW,oBAAL;AACD;;AAGD;;;;;;;;;;mCAKoB;AAClB,YAAMX,OAAO,IAAb;;AAEA;AACA;AACA;AACAY,eAAOC,OAAP,CAAe,KAAKT,IAAL,CAAUC,WAAzB,EAAsCS,GAAtC,CAA0C,gBAAY;AAAA;AAAA,cAAVC,CAAU;AAAA,cAAPC,CAAO;;AACpDhB,eAAKC,IAAL,CAAUgB,EAAV,CAAa,QAAQF,CAArB,EAAwB,UAAUG,CAAV,EAAa;AACnClB,iBAAKmB,aAAL,CAAmBJ,CAAnB;AACD,WAFD;AAGD,SAJD;AAMD;;;;;AAED;;;;;;;;;sCAKuB;AACrB,YAAMf,OAAO,IAAb;;AAEAA,aAAKC,IAAL,CAAUmB,gBAAV,CAA2B;AACzBf,uBAAaL,KAAKI,IAAL,CAAUC;AADE,SAA3B;AAGD;;;;;AAED;;;;;;;;;;;6BAOcgB,U,EAAyB;AAAA,YAAbC,GAAa,uEAAP,KAAO;;AACrC,YAAMtB,OAAO,IAAb;;AAEAA,aAAKI,IAAL,CAAUK,QAAV,CAAmBc,OAAnB,CAA2B,cAAM;AAC/BvB,eAAKwB,SAAL,CAAeC,GAAGC,OAAlB,EAA2BD,GAAGJ,UAAH,CAA3B,EAA2CC,GAA3C;AACD,SAFD;AAID;;;;;AAED;;;;;;;;;;;;;yBASUG,E,EAAIE,O,EAASC,Q,EAAU;AAC/B,YAAMC,MAAM3B,EAAEuB,EAAF,CAAZ;;AAEA;AACA,YAAII,IAAIC,IAAJ,CAAS,mBAAT,MAAkCC,SAAtC,EAAiD;AAC/C,cAAIC,qBAAqB9B,EAAE,0CAAF,CAAzB;AACA2B,cAAIC,IAAJ,CAAS,mBAAT,EAA8BE,kBAA9B;AACAA,6BAAmBC,WAAnB,CAA+BJ,GAA/B;AACD;;AAED,YAAIF,YAAY,KAAhB,EAAuB;AACrB,cAAIO,QAAQL,IAAIC,IAAJ,CAAS,mBAAT,CAAZ;AACAD,cAAII,WAAJ,CAAgBC,KAAhB;AACD;;AAED,YAAIN,aAAa,KAAjB,EAAwB;AACtBC,cAAIM,SAAJ,CAAcR,OAAd;AACD,SAFD,MAEO;AACLE,cAAIO,QAAJ,CAAaT,OAAb;AACD;AAEF;;;;;;;;;AAIH;;;AACAxB,OAAOL,oBAAP,GAA8BA,oBAA9B","file":"DOMElementRelocation.js","sourcesContent":["class DOMElementRelocation {\n\n  constructor(conf) {\n    const self = this;\n\n    self.$win = $(window);\n\n    // Some defaults.\n    self.opts = {\n      breakpoints: {\n        desk: '(min-width: 1230px)',\n        tab: '(min-width: 768px) and (max-width: 1229px)',\n        mob: '(min-width: 0px) and (max-width: 767px)'\n      },\n      elements: [],\n      ...conf\n    };\n\n    self._registerElements();\n    self._registerBreakpoints();\n  }\n\n\n  /**\n   * Register elements to mediaQueryEvents event.\n   *\n   * @private\n   */\n  _registerElements() {\n    const self = this;\n\n    // Loop al defined breakpoints. Each time browser reaches one of them,\n    // mediaQueryEvents will act and execute the new position of the\n    // elements assigned to this breakpoint.\n    Object.entries(this.opts.breakpoints).map(([k, v]) => {\n      self.$win.on('mq.' + k, function (e) {\n        self._bulkRelocate(k);\n      });\n    });\n\n  }\n\n  /**\n   * Register breakpoints to mediaQueryEvents.\n   *\n   * @private\n   */\n  _registerBreakpoints() {\n    const self = this;\n\n    self.$win.mediaQueryEvents({\n      breakpoints: self.opts.breakpoints\n    });\n  }\n\n  /**\n   * Relocates a group of elements.\n   * @param breakpoint\n   * @param pos\n   *\n   * @private\n   */\n  _bulkRelocate(breakpoint, pos = \"top\") {\n    const self = this;\n\n    self.opts.elements.forEach(el => {\n      self._relocate(el.element, el[breakpoint], pos);\n    });\n\n  }\n\n  /**\n   * Moves a DOM element to a new location.\n   *\n   * @param el\n   * @param $target\n   * @param position\n   *\n   * @private\n   */\n  _relocate(el, $target, position) {\n    const $el = $(el);\n\n    // First time we memorize the original position.\n    if ($el.data('original-position') === undefined) {\n      let $originalPosHolder = $('<div class=\"original-position-holder\" />');\n      $el.data('original-position', $originalPosHolder);\n      $originalPosHolder.insertAfter($el);\n    }\n\n    if ($target === false) {\n      let $orig = $el.data('original-position');\n      $el.insertAfter($orig);\n    }\n\n    if (position === 'top') {\n      $el.prependTo($target);\n    } else {\n      $el.appendTo($target);\n    }\n\n  };\n}\n\n\n// Expose the class to window.\nwindow.DOMElementRelocation = DOMElementRelocation;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRPTUVsZW1lbnRSZWxvY2F0aW9uLmpzIl0sIm5hbWVzIjpbIkRPTUVsZW1lbnRSZWxvY2F0aW9uIiwiY29uZiIsInNlbGYiLCIkd2luIiwiJCIsIndpbmRvdyIsIm9wdHMiLCJicmVha3BvaW50cyIsImRlc2siLCJ0YWIiLCJtb2IiLCJlbGVtZW50cyIsIl9yZWdpc3RlckVsZW1lbnRzIiwiX3JlZ2lzdGVyQnJlYWtwb2ludHMiLCJPYmplY3QiLCJlbnRyaWVzIiwibWFwIiwiayIsInYiLCJvbiIsImUiLCJfYnVsa1JlbG9jYXRlIiwibWVkaWFRdWVyeUV2ZW50cyIsImJyZWFrcG9pbnQiLCJwb3MiLCJmb3JFYWNoIiwiX3JlbG9jYXRlIiwiZWwiLCJlbGVtZW50IiwiJHRhcmdldCIsInBvc2l0aW9uIiwiJGVsIiwiZGF0YSIsInVuZGVmaW5lZCIsIiRvcmlnaW5hbFBvc0hvbGRlciIsImluc2VydEFmdGVyIiwiJG9yaWciLCJwcmVwZW5kVG8iLCJhcHBlbmRUbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7SUFBTUEsb0I7QUFFSixnQ0FBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNoQixRQUFNQyxPQUFPLElBQWI7O0FBRUFBLFNBQUtDLElBQUwsR0FBWUMsRUFBRUMsTUFBRixDQUFaOztBQUVBO0FBQ0FILFNBQUtJLElBQUw7QUFDRUMsbUJBQWE7QUFDWEMsY0FBTSxxQkFESztBQUVYQyxhQUFLLDRDQUZNO0FBR1hDLGFBQUs7QUFITSxPQURmO0FBTUVDLGdCQUFVO0FBTlosT0FPS1YsSUFQTDs7QUFVQUMsU0FBS1UsaUJBQUw7QUFDQVYsU0FBS1csb0JBQUw7QUFDRDs7QUFHRDs7Ozs7Ozs7OzttQ0FLb0I7QUFDbEIsWUFBTVgsT0FBTyxJQUFiOztBQUVBO0FBQ0E7QUFDQTtBQUNBWSxlQUFPQyxPQUFQLENBQWUsS0FBS1QsSUFBTCxDQUFVQyxXQUF6QixFQUFzQ1MsR0FBdEMsQ0FBMEMsZ0JBQVk7QUFBQTtBQUFBLGNBQVZDLENBQVU7QUFBQSxjQUFQQyxDQUFPOztBQUNwRGhCLGVBQUtDLElBQUwsQ0FBVWdCLEVBQVYsQ0FBYSxRQUFRRixDQUFyQixFQUF3QixVQUFVRyxDQUFWLEVBQWE7QUFDbkNsQixpQkFBS21CLGFBQUwsQ0FBbUJKLENBQW5CO0FBQ0QsV0FGRDtBQUdELFNBSkQ7QUFNRDs7Ozs7QUFFRDs7Ozs7Ozs7O3NDQUt1QjtBQUNyQixZQUFNZixPQUFPLElBQWI7O0FBRUFBLGFBQUtDLElBQUwsQ0FBVW1CLGdCQUFWLENBQTJCO0FBQ3pCZix1QkFBYUwsS0FBS0ksSUFBTCxDQUFVQztBQURFLFNBQTNCO0FBR0Q7Ozs7O0FBRUQ7Ozs7Ozs7Ozs7OzZCQU9jZ0IsVSxFQUF5QjtBQUFBLFlBQWJDLEdBQWEsdUVBQVAsS0FBTzs7QUFDckMsWUFBTXRCLE9BQU8sSUFBYjs7QUFFQUEsYUFBS0ksSUFBTCxDQUFVSyxRQUFWLENBQW1CYyxPQUFuQixDQUEyQixjQUFNO0FBQy9CdkIsZUFBS3dCLFNBQUwsQ0FBZUMsR0FBR0MsT0FBbEIsRUFBMkJELEdBQUdKLFVBQUgsQ0FBM0IsRUFBMkNDLEdBQTNDO0FBQ0QsU0FGRDtBQUlEOzs7OztBQUVEOzs7Ozs7Ozs7Ozs7O3lCQVNVRyxFLEVBQUlFLE8sRUFBU0MsUSxFQUFVO0FBQy9CLFlBQU1DLE1BQU0zQixFQUFFdUIsRUFBRixDQUFaOztBQUVBO0FBQ0EsWUFBSUksSUFBSUMsSUFBSixDQUFTLG1CQUFULE1BQWtDQyxTQUF0QyxFQUFpRDtBQUMvQyxjQUFJQyxxQkFBcUI5QixFQUFFLDBDQUFGLENBQXpCO0FBQ0EyQixjQUFJQyxJQUFKLENBQVMsbUJBQVQsRUFBOEJFLGtCQUE5QjtBQUNBQSw2QkFBbUJDLFdBQW5CLENBQStCSixHQUEvQjtBQUNEOztBQUVELFlBQUlGLFlBQVksS0FBaEIsRUFBdUI7QUFDckIsY0FBSU8sUUFBUUwsSUFBSUMsSUFBSixDQUFTLG1CQUFULENBQVo7QUFDQUQsY0FBSUksV0FBSixDQUFnQkMsS0FBaEI7QUFDRDs7QUFFRCxZQUFJTixhQUFhLEtBQWpCLEVBQXdCO0FBQ3RCQyxjQUFJTSxTQUFKLENBQWNSLE9BQWQ7QUFDRCxTQUZELE1BRU87QUFDTEUsY0FBSU8sUUFBSixDQUFhVCxPQUFiO0FBQ0Q7QUFFRjs7Ozs7Ozs7O0FBSUg7OztBQUNBeEIsT0FBT0wsb0JBQVAsR0FBOEJBLG9CQUE5QiIsImZpbGUiOiJET01FbGVtZW50UmVsb2NhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIERPTUVsZW1lbnRSZWxvY2F0aW9uIHtcblxuICBjb25zdHJ1Y3Rvcihjb25mKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG5cbiAgICBzZWxmLiR3aW4gPSAkKHdpbmRvdyk7XG5cbiAgICAvLyBTb21lIGRlZmF1bHRzLlxuICAgIHNlbGYub3B0cyA9IHtcbiAgICAgIGJyZWFrcG9pbnRzOiB7XG4gICAgICAgIGRlc2s6ICcobWluLXdpZHRoOiAxMjMwcHgpJyxcbiAgICAgICAgdGFiOiAnKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMjI5cHgpJyxcbiAgICAgICAgbW9iOiAnKG1pbi13aWR0aDogMHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpJ1xuICAgICAgfSxcbiAgICAgIGVsZW1lbnRzOiBbXSxcbiAgICAgIC4uLmNvbmZcbiAgICB9O1xuXG4gICAgc2VsZi5fcmVnaXN0ZXJFbGVtZW50cygpO1xuICAgIHNlbGYuX3JlZ2lzdGVyQnJlYWtwb2ludHMoKTtcbiAgfVxuXG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGVsZW1lbnRzIHRvIG1lZGlhUXVlcnlFdmVudHMgZXZlbnQuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfcmVnaXN0ZXJFbGVtZW50cygpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcblxuICAgIC8vIExvb3AgYWwgZGVmaW5lZCBicmVha3BvaW50cy4gRWFjaCB0aW1lIGJyb3dzZXIgcmVhY2hlcyBvbmUgb2YgdGhlbSxcbiAgICAvLyBtZWRpYVF1ZXJ5RXZlbnRzIHdpbGwgYWN0IGFuZCBleGVjdXRlIHRoZSBuZXcgcG9zaXRpb24gb2YgdGhlXG4gICAgLy8gZWxlbWVudHMgYXNzaWduZWQgdG8gdGhpcyBicmVha3BvaW50LlxuICAgIE9iamVjdC5lbnRyaWVzKHRoaXMub3B0cy5icmVha3BvaW50cykubWFwKChbaywgdl0pID0+IHtcbiAgICAgIHNlbGYuJHdpbi5vbignbXEuJyArIGssIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHNlbGYuX2J1bGtSZWxvY2F0ZShrKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYnJlYWtwb2ludHMgdG8gbWVkaWFRdWVyeUV2ZW50cy5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9yZWdpc3RlckJyZWFrcG9pbnRzKCkge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuXG4gICAgc2VsZi4kd2luLm1lZGlhUXVlcnlFdmVudHMoe1xuICAgICAgYnJlYWtwb2ludHM6IHNlbGYub3B0cy5icmVha3BvaW50c1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbG9jYXRlcyBhIGdyb3VwIG9mIGVsZW1lbnRzLlxuICAgKiBAcGFyYW0gYnJlYWtwb2ludFxuICAgKiBAcGFyYW0gcG9zXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfYnVsa1JlbG9jYXRlKGJyZWFrcG9pbnQsIHBvcyA9IFwidG9wXCIpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcblxuICAgIHNlbGYub3B0cy5lbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcbiAgICAgIHNlbGYuX3JlbG9jYXRlKGVsLmVsZW1lbnQsIGVsW2JyZWFrcG9pbnRdLCBwb3MpO1xuICAgIH0pO1xuXG4gIH1cblxuICAvKipcbiAgICogTW92ZXMgYSBET00gZWxlbWVudCB0byBhIG5ldyBsb2NhdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIGVsXG4gICAqIEBwYXJhbSAkdGFyZ2V0XG4gICAqIEBwYXJhbSBwb3NpdGlvblxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgX3JlbG9jYXRlKGVsLCAkdGFyZ2V0LCBwb3NpdGlvbikge1xuICAgIGNvbnN0ICRlbCA9ICQoZWwpO1xuXG4gICAgLy8gRmlyc3QgdGltZSB3ZSBtZW1vcml6ZSB0aGUgb3JpZ2luYWwgcG9zaXRpb24uXG4gICAgaWYgKCRlbC5kYXRhKCdvcmlnaW5hbC1wb3NpdGlvbicpID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGxldCAkb3JpZ2luYWxQb3NIb2xkZXIgPSAkKCc8ZGl2IGNsYXNzPVwib3JpZ2luYWwtcG9zaXRpb24taG9sZGVyXCIgLz4nKTtcbiAgICAgICRlbC5kYXRhKCdvcmlnaW5hbC1wb3NpdGlvbicsICRvcmlnaW5hbFBvc0hvbGRlcik7XG4gICAgICAkb3JpZ2luYWxQb3NIb2xkZXIuaW5zZXJ0QWZ0ZXIoJGVsKTtcbiAgICB9XG5cbiAgICBpZiAoJHRhcmdldCA9PT0gZmFsc2UpIHtcbiAgICAgIGxldCAkb3JpZyA9ICRlbC5kYXRhKCdvcmlnaW5hbC1wb3NpdGlvbicpO1xuICAgICAgJGVsLmluc2VydEFmdGVyKCRvcmlnKTtcbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb24gPT09ICd0b3AnKSB7XG4gICAgICAkZWwucHJlcGVuZFRvKCR0YXJnZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkZWwuYXBwZW5kVG8oJHRhcmdldCk7XG4gICAgfVxuXG4gIH07XG59XG5cblxuLy8gRXhwb3NlIHRoZSBjbGFzcyB0byB3aW5kb3cuXG53aW5kb3cuRE9NRWxlbWVudFJlbG9jYXRpb24gPSBET01FbGVtZW50UmVsb2NhdGlvbjsiXX0="}